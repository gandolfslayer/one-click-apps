<%#-- copyright
OpenProject is an open source project management software.
Copyright (C) the OpenProject GmbH

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See COPYRIGHT and LICENSE files for more details.

++#%>

<%=
  component_wrapper do
    primer_form_with(
      model: @project_storage,
      url: admin_settings_storage_project_storage_path(id: @project_storage),
      data: {
        turbo: true,
        controller: 'disable-when-checked',
        'disable-when-checked-reversed-value': true
      },
      method: :delete
    ) do |form|
      render(Primer::Alpha::Dialog.new(
        id: id,
        title: nil,
        test_selector: id,
        size: :large
      )) do |dialog|
        dialog.with_body do
          flex_layout do |layout|
            layout.with_row(mb: 3) do
              render(Primer::Beta::Heading.new(tag: :h1, text_align: :center)) do
                render(Primer::Beta::Octicon.new(icon: :alert, color: :danger, size: :medium))
              end
            end

            layout.with_row(mb: 1) do
              render(Primer::Beta::Heading.new(tag: :h2, color: :default, text_align: :center)) do
                heading
              end
            end

            layout.with_row(mb: 2) do
              render(Primer::Beta::Text.new(tag: :p, color: :subtle, text_align: :center)) do
                text
              end
            end

            layout.with_row do
              render(Primer::Alpha::CheckBox.new(
                name: "confirm_delete",
                label: confirmation_text,
                data: { 'disable-when-checked-target': 'cause' }
              ))
            end
          end
        end

        dialog.with_footer do
          component_collection do |footer|
            footer.with_component(Primer::ButtonComponent.new(data: { "close-dialog-id": id })) do
              I18n.t("button_close")
            end

            footer.with_component(
              Primer::ButtonComponent.new(scheme: :danger, type: :submit,
                                          test_selector: "remove-project-storage-button",
                                          disabled: true,
                                          data: {
                                            "disable-when-checked-target": "effect",
                                            "close-dialog-id": id
                                          })
            ) { I18n.t("button_remove") }
          end
        end
      end
    end
  end
%>

